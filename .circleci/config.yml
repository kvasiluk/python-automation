version: 2.1
orbs:
  win: circleci/windows@2.2.0
jobs:
  build:
    executor: win/default
#    docker:
#      - image: circleci/python:3.6-browsers

    working_directory: ~/circleci-python-automation

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install allure
          command: |
            sudo apt install software-properties-common
            sudo apt-get update
            sudo apt-get install -y default-jre
            sudo curl -o allure-commandline-2.13.0.tgz -Ls http://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.0/allure-commandline-2.13.0.tgz
            sudo tar -zxvf allure-commandline-2.13.0.tgz -C /opt/
            sudo ln -s /opt/allure-commandline-2.13.0/bin/allure /usr/bin/allure
            $Env:Path += ";/opt/allure-2.13.0/bin"
#            export PATH="$PATH:/opt/allure-2.13.0/bin"
            allure --version

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest ui_tests/test_empty.py --ignore=ui_tests/test_prepare_data.py -n 4 --dist=loadfile --reruns 2 -v --alluredir=test_results/allure
          when: always

#      - run:
#          name: clean test data
#          command: |
#            . venv/bin/activate
#            python -m pytest -m clean
#          when: always

      - run:
          name: generate allure report
          command: |
            $Env:Path += ";/opt/allure-2.13.0/bin"
#            export PATH="$PATH:/opt/allure-2.13.0/bin"
            allure generate ./test_results/allure -o ./test_results/html_report
          when: always

      - store_artifacts:
          path: test_results
          destination: test_results
